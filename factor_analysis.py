# -*- coding: utf-8 -*-
"""Factor analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t6oVIbsSpqCCTl9iDhNlXbmnZIeXrSOC
"""

# Commented out IPython magic to ensure Python compatibility.
# %tensorflow_version 2.x
from __future__ import absolute_import, division, print_function, unicode_literals
import seaborn as sns
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from IPython.display import clear_output
from six.moves import urllib
from keras import callbacks
import sklearn.datasets
!pip install factor_analyzer
from factor_analyzer import FactorAnalyzer

import tensorflow.compat.v2.feature_column as fc

import tensorflow as tf
!pip install -q sklearn

"""Â¿dentro de las 16 dimensiones de la teoria de cattell puede haber rasgos de personalidad que se puedan agrupar para formar tipos de personalidad?"""

df = pd.read_csv('/content/Datos Definitivos Dimensiones.csv') # training data

df.drop(['age',	'gender',	'accuracy',	'source',	'elapsed'], axis=1, inplace=True)

df.head()

df.drop(['Unnamed: 0'], axis=1, inplace=True)

fa = FactorAnalyzer(n_factors= 5, rotation= 'varimax')

fa.fit(df)

#get the loadings
loadings = fa.loadings_

#get the eigenvector and eigenvalues

ev, v = fa.get_eigenvalues()

#do a screeplot

xvals = range(1, df.shape[1]+1)

plt.scatter(xvals, ev)
plt.plot(xvals, ev)
plt.xlabel("factors")
plt.ylabel('Eigenvalue')
plt.grid()

loading_df = pd.DataFrame.from_records(loadings)
loading_Table = pd.DataFrame.from_records(loadings)

loading_Table.index = ['Warmth (A)', 'Reasoning (B)', 'Emotional Stability (C)', 'Dominance (E)', 'Liveliness (F)', 'Rule-Consciousness (G)', 'Social Boldness (H)', 'Sensitivity (I)', 'Vigilance (L)', 'Abstractedness (M)', 'Privateness (N)', 'Apprehension (0)', 'Openness to Change (Q1)', 'Self-Reliance (Q2)', 'Perfectionism (Q3)', 'Tension (Q4)' ]

loading_Table['communalities'] = fa.get_communalities()

loading_Table

fa.get_factor_variance()

sns.heatmap(loading_df, annot=True)
plt.ylabel('Rasgos de personalidad')
plt.xlabel('Factores')